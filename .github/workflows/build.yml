name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04,windows-2019,macos-10.15]

    steps:
    - uses: actions/checkout@v2
    - uses: seanmiddleditch/gha-setup-ninja@master
    
    - name: Add msbuild to PATH
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1.9.0

    - name: Setup Python
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.7

    - name: Install Conan and Cmake
      shell: bash
      run: |
        pip install conan cmake

    - name: Configure Conan
      if: runner.os == 'Linux'
      shell: bash
      run: |
        conan profile new default --detect
        conan profile update settings.compiler.libcxx=libstdc++11 default

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      env:
        CC: gcc-10
        CXX: g++-10
      if: runner.os == 'Linux'
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -G Ninja $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_ONLY_BENCHMARK_TEST=ON

    - name: Configure CMake # windows and osx
      if: runner.os != 'Linux'
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -G Ninja $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_ONLY_BENCHMARK_TEST=ON

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build . --config $BUILD_TYPE

    - name: CTest Backend Feature
      shell: bash
      working-directory: ${{github.workspace}}/build/src/tests
      run: ctest -V -R test_feature -C $BUILD_TYPE

    - name: CTest Backend Conv2d
      shell: bash
      working-directory: ${{github.workspace}}/build/src/tests
      run: ctest -V -R test_gen_conv2d -C $BUILD_TYPE

    - name: CTest Backend Conv2d Depthwise
      shell: bash
      working-directory: ${{github.workspace}}/build/src/tests
      run: ctest -V -R test_gen_conv2d_depthwise -C $BUILD_TYPE

    - name: CTest Backend Gnne Conv2d
      shell: bash
      working-directory: ${{github.workspace}}/build/src/tests
      run: ctest -V -R test_gen_gnne_conv2d -C $BUILD_TYPE

    - name: CTest Backend Gnne Conv2d Depthwise
      shell: bash
      working-directory: ${{github.workspace}}/build/src/tests
      run: ctest -V -R test_gen_gnne_conv2d_depthwise -C $BUILD_TYPE

    - name: Create Benchmark Environment
      working-directory: ${{github.workspace}}
      shell: bash
      run: mkdir benchmark_results

    - name: BenchMark Backend conv2d
      if: runner.os == 'Linux'
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        build/bin/bench_conv2d -g Conv2DBenchMark_1x1 -j benchmark_results/bench_conv2d_1x1.xml
        build/bin/bench_conv2d -g Conv2DBenchMark_3x3 -j benchmark_results/bench_conv2d_3x3.xml
        build/bin/bench_conv2d -g Conv2DBenchMark_5x5 -j benchmark_results/bench_conv2d_5x5.xml
        build/bin/bench_conv2d -g Conv2DBenchMark_7x7 -j benchmark_results/bench_conv2d_7x7.xml

    - name: BenchMark Backend conv2d depthwise
      if: runner.os == 'Linux'
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        build/bin/bench_conv2d_depthwise -g Conv2DDepthwiseBenchMark_1x1 -j benchmark_results/bench_conv2d_depthwise_1x1.xml
        build/bin/bench_conv2d_depthwise -g Conv2DDepthwiseBenchMark_3x3 -j benchmark_results/bench_conv2d_depthwise_3x3.xml
        build/bin/bench_conv2d_depthwise -g Conv2DDepthwiseBenchMark_5x5 -j benchmark_results/bench_conv2d_depthwise_5x5.xml
        build/bin/bench_conv2d_depthwise -g Conv2DDepthwiseBenchMark_7x7 -j benchmark_results/bench_conv2d_depthwise_7x7.xml
      
    - name: Publish Bechmark Results
      if: always() && runner.os == 'Linux'
      uses: EnricoMi/publish-unit-test-result-action@v1
      with:
        files: benchmark_results/*.xml